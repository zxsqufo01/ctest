//排序组合直接改善（即n本书，放在k（此题为5）个书架上，求组合数。）
类解决方案{
    public int countVowelStrings（int n）{
         返回（n + 4）*（n + 3）*（n + 2）*（n + 1）/ 24;
    }
}

//动态规划思路
类解决方案{
    public int countVowelStrings（int n）{
        if（n == 0）返回0;
        int [] [] dp =新的int [n + 1] [5];
        //初始化n = 1的情况--0-4对应着au元音的数目
        对于（int i = 0; i <5; i ++）dp [1] [i] = 1;
        // n为字符串长，循环内将字符串长度递增相应的元音数量
        for（int i = 2; i <n + 1; i ++）{
			 for（int j = 0; j <5; j ++）{
                 //取得字符串长为i，尾部字母元音相应个数，按字典序
				 for（int k = j; k> = 0; k--）{
					 dp [i] [j] + = dp [i-1] [k];
				 }
			 }
		 }
         返回dp [n] [0] + dp [n] [1] + dp [n] [2] + dp [n] [3] + dp [n] [4];
    }
}

