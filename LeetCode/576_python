class Solution:
    def findPaths(self, m: int, n: int, N: int, i: int, j: int) -> int:
        dp = [[0]*(n+2) for _ in range(m+2)]  # 画棋盘，初始值设为0
        temp = [[0]*(n+2) for _ in range(m+2)]
        dp[i+1][j+1] = 1 # 初始化球位置
        result = 0
        for k in range(N):
            # 移动方法
            for i in range(1,m+1):
                result += (dp[i][1] + dp[i][-2])
            for j in range(1,n+1):
                result += (dp[1][j] + dp[-2][j])
            for i in range(1, m+1):
                for j in range(1, n+1):
                    temp[i][j] = dp[i-1][j] + dp[i+1][j] + dp[i][j-1] + dp[i][j+1]
            for i in range(m+2):
                for j in range(n+2):
                    dp[i][j] = temp[i][j]
        return result % (10**9 + 7)
